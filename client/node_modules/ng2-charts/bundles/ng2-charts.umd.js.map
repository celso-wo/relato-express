{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f16200a44c8a3122317e","webpack:///./src/charts/charts.ts","webpack:///external \"@angular/core\"","webpack:///./src/index.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA,uCAAuC,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB;AACA;AACA,6BAA6B,oCAAoC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wDAAwD;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,6CAA6C,eAAe,EAAE;AAC9D,2DAA2D,uBAAuB,EAAE;AACpF,kDAAkD,eAAe,EAAE;AACnE,gEAAgE,uBAAuB,EAAE;AACzF,4DAA4D,uBAAuB,EAAE;AACrF;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,kDAAkD,uBAAuB,EAAE;AAC3E,2DAA2D,yBAAyB,EAAE;AACtF,uDAAuD,uBAAuB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;AC9SA,+C;;;;;;;ACAA;AACA;AACA;AACA;AACA","file":"ng2-charts.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-charts.umd\"] = factory(require(\"@angular/core\"));\n\telse\n\t\troot[\"ng2-charts.umd\"] = factory(root[\"@angular/core\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f16200a44c8a3122317e","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = require(\"@angular/core\");\r\n/* tslint:disable-next-line */\r\nvar BaseChartDirective = (function () {\r\n    function BaseChartDirective(element) {\r\n        this.labels = [];\r\n        this.options = {};\r\n        this.chartClick = new core_1.EventEmitter();\r\n        this.chartHover = new core_1.EventEmitter();\r\n        this.initFlag = false;\r\n        this.element = element;\r\n    }\r\n    BaseChartDirective.prototype.ngOnInit = function () {\r\n        this.ctx = this.element.nativeElement.getContext('2d');\r\n        this.cvs = this.element.nativeElement;\r\n        this.initFlag = true;\r\n        if (this.data || this.datasets) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    BaseChartDirective.prototype.ngOnChanges = function (changes) {\r\n        if (this.initFlag) {\r\n            // Check if the changes are in the data or datasets\r\n            if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) {\r\n                if (changes['data']) {\r\n                    this.updateChartData(changes['data'].currentValue);\r\n                }\r\n                else {\r\n                    this.updateChartData(changes['datasets'].currentValue);\r\n                }\r\n                this.chart.update();\r\n            }\r\n            else {\r\n                // otherwise rebuild the chart\r\n                this.refresh();\r\n            }\r\n        }\r\n    };\r\n    BaseChartDirective.prototype.ngOnDestroy = function () {\r\n        if (this.chart) {\r\n            this.chart.destroy();\r\n            this.chart = void 0;\r\n        }\r\n    };\r\n    BaseChartDirective.prototype.getChartBuilder = function (ctx /*, data:Array<any>, options:any*/) {\r\n        var _this = this;\r\n        var datasets = this.getDatasets();\r\n        var options = Object.assign({}, this.options);\r\n        if (this.legend === false) {\r\n            options.legend = { display: false };\r\n        }\r\n        // hock for onHover and onClick events\r\n        options.hover = options.hover || {};\r\n        if (!options.hover.onHover) {\r\n            options.hover.onHover = function (active) {\r\n                if (active && !active.length) {\r\n                    return;\r\n                }\r\n                _this.chartHover.emit({ active: active });\r\n            };\r\n        }\r\n        if (!options.onClick) {\r\n            options.onClick = function (event, active) {\r\n                _this.chartClick.emit({ event: event, active: active });\r\n            };\r\n        }\r\n        var opts = {\r\n            type: this.chartType,\r\n            data: {\r\n                labels: this.labels,\r\n                datasets: datasets\r\n            },\r\n            options: options\r\n        };\r\n        if (typeof Chart === 'undefined') {\r\n            throw new Error('ng2-charts configuration issue: Embedding Chart.js lib is mandatory');\r\n        }\r\n        return new Chart(ctx, opts);\r\n    };\r\n    BaseChartDirective.prototype.updateChartData = function (newDataValues) {\r\n        if (Array.isArray(newDataValues[0].data)) {\r\n            this.chart.data.datasets.forEach(function (dataset, i) {\r\n                dataset.data = newDataValues[i].data;\r\n                if (newDataValues[i].label) {\r\n                    dataset.label = newDataValues[i].label;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.chart.data.datasets[0].data = newDataValues;\r\n        }\r\n    };\r\n    BaseChartDirective.prototype.getDatasets = function () {\r\n        var _this = this;\r\n        var datasets = void 0;\r\n        // in case if datasets is not provided, but data is present\r\n        if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\r\n            if (Array.isArray(this.data[0])) {\r\n                datasets = this.data.map(function (data, index) {\r\n                    return { data: data, label: _this.labels[index] || \"Label \" + index };\r\n                });\r\n            }\r\n            else {\r\n                datasets = [{ data: this.data, label: \"Label 0\" }];\r\n            }\r\n        }\r\n        if (this.datasets && this.datasets.length ||\r\n            (datasets && datasets.length)) {\r\n            datasets = (this.datasets || datasets)\r\n                .map(function (elm, index) {\r\n                var newElm = Object.assign({}, elm);\r\n                if (_this.colors && _this.colors.length) {\r\n                    Object.assign(newElm, _this.colors[index]);\r\n                }\r\n                else {\r\n                    Object.assign(newElm, getColors(_this.chartType, index, newElm.data.length));\r\n                }\r\n                return newElm;\r\n            });\r\n        }\r\n        if (!datasets) {\r\n            throw new Error(\"ng-charts configuration error,\\n      data or datasets field are required to render char \" + this.chartType);\r\n        }\r\n        return datasets;\r\n    };\r\n    BaseChartDirective.prototype.refresh = function () {\r\n        // if (this.options && this.options.responsive) {\r\n        //   setTimeout(() => this.refresh(), 50);\r\n        // }\r\n        // todo: remove this line, it is producing flickering\r\n        this.ngOnDestroy();\r\n        this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\r\n    };\r\n    return BaseChartDirective;\r\n}());\r\nBaseChartDirective.defaultColors = [\r\n    [255, 99, 132],\r\n    [54, 162, 235],\r\n    [255, 206, 86],\r\n    [231, 233, 237],\r\n    [75, 192, 192],\r\n    [151, 187, 205],\r\n    [220, 220, 220],\r\n    [247, 70, 74],\r\n    [70, 191, 189],\r\n    [253, 180, 92],\r\n    [148, 159, 177],\r\n    [77, 83, 96]\r\n];\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", Array)\r\n], BaseChartDirective.prototype, \"data\", void 0);\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", Array)\r\n], BaseChartDirective.prototype, \"datasets\", void 0);\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", Array)\r\n], BaseChartDirective.prototype, \"labels\", void 0);\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", Object)\r\n], BaseChartDirective.prototype, \"options\", void 0);\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", String)\r\n], BaseChartDirective.prototype, \"chartType\", void 0);\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", Array)\r\n], BaseChartDirective.prototype, \"colors\", void 0);\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], BaseChartDirective.prototype, \"legend\", void 0);\r\n__decorate([\r\n    core_1.Output(),\r\n    __metadata(\"design:type\", core_1.EventEmitter)\r\n], BaseChartDirective.prototype, \"chartClick\", void 0);\r\n__decorate([\r\n    core_1.Output(),\r\n    __metadata(\"design:type\", core_1.EventEmitter)\r\n], BaseChartDirective.prototype, \"chartHover\", void 0);\r\nBaseChartDirective = __decorate([\r\n    core_1.Directive({ selector: 'canvas[baseChart]', exportAs: 'base-chart' }),\r\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\r\n], BaseChartDirective);\r\nexports.BaseChartDirective = BaseChartDirective;\r\nfunction rgba(colour, alpha) {\r\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\r\n}\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\nfunction formatLineColor(colors) {\r\n    return {\r\n        backgroundColor: rgba(colors, 0.4),\r\n        borderColor: rgba(colors, 1),\r\n        pointBackgroundColor: rgba(colors, 1),\r\n        pointBorderColor: '#fff',\r\n        pointHoverBackgroundColor: '#fff',\r\n        pointHoverBorderColor: rgba(colors, 0.8)\r\n    };\r\n}\r\nfunction formatBarColor(colors) {\r\n    return {\r\n        backgroundColor: rgba(colors, 0.6),\r\n        borderColor: rgba(colors, 1),\r\n        hoverBackgroundColor: rgba(colors, 0.8),\r\n        hoverBorderColor: rgba(colors, 1)\r\n    };\r\n}\r\nfunction formatPieColors(colors) {\r\n    return {\r\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\r\n        borderColor: colors.map(function () { return '#fff'; }),\r\n        pointBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\r\n        pointBorderColor: colors.map(function () { return '#fff'; }),\r\n        pointHoverBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\r\n        pointHoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\r\n    };\r\n}\r\nfunction formatPolarAreaColors(colors) {\r\n    return {\r\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\r\n        borderColor: colors.map(function (color) { return rgba(color, 1); }),\r\n        hoverBackgroundColor: colors.map(function (color) { return rgba(color, 0.8); }),\r\n        hoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\r\n    };\r\n}\r\nfunction getRandomColor() {\r\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\r\n}\r\n/**\r\n * Generate colors for line|bar charts\r\n * @param index\r\n * @returns {number[]|Color}\r\n */\r\nfunction generateColor(index) {\r\n    return BaseChartDirective.defaultColors[index] || getRandomColor();\r\n}\r\n/**\r\n * Generate colors for pie|doughnut charts\r\n * @param count\r\n * @returns {Colors}\r\n */\r\nfunction generateColors(count) {\r\n    var colorsArr = new Array(count);\r\n    for (var i = 0; i < count; i++) {\r\n        colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\r\n    }\r\n    return colorsArr;\r\n}\r\n/**\r\n * Generate colors by chart type\r\n * @param chartType\r\n * @param index\r\n * @param count\r\n * @returns {Color}\r\n */\r\nfunction getColors(chartType, index, count) {\r\n    if (chartType === 'pie' || chartType === 'doughnut') {\r\n        return formatPieColors(generateColors(count));\r\n    }\r\n    if (chartType === 'polarArea') {\r\n        return formatPolarAreaColors(generateColors(count));\r\n    }\r\n    if (chartType === 'line' || chartType === 'radar') {\r\n        return formatLineColor(generateColor(index));\r\n    }\r\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\r\n        return formatBarColor(generateColor(index));\r\n    }\r\n    return generateColor(index);\r\n}\r\nvar ChartsModule = (function () {\r\n    function ChartsModule() {\r\n    }\r\n    return ChartsModule;\r\n}());\r\nChartsModule = __decorate([\r\n    core_1.NgModule({\r\n        declarations: [\r\n            BaseChartDirective\r\n        ],\r\n        exports: [\r\n            BaseChartDirective\r\n        ],\r\n        imports: []\r\n    })\r\n], ChartsModule);\r\nexports.ChartsModule = ChartsModule;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/charts/charts.ts\n// module id = 0\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 1\n// module chunks = 0","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(require(\"./charts/charts\"));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}